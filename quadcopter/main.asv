% loads:
%    hovering equilibrium (xs,us)
%    continuous time matrices Ac,Bc of the linearization
%    matrices sys.A, sys.B of the inner-loop discretized with sampling period sys.Ts
%    outer controller optimizer instance
load('quadData.mat')
addpath('./cplex');
outerController = getOuterController(Ac, 'sedu');
disp('Data successfully loaded')



%% %%%%%%%%%%%%%% First MPC controller %%%%%%%%%%%%%%%%%%%

N = 20; 
T = 2;

angleMax = deg2rad(10);
vAngleMax = deg2rad(15);

%Use for stage cost --> to tune
Q = 10*eye(7); 
R = eye(4);

x0 = [-1 deg2rad(10) deg2rad(-10) deg2rad(120) 0 0 0];

x = sdpvar(7, N);
u = sdpvar(4,N);
constraints = [];

for i = 2:N
    %constraints on alpha, beta, alpha dot and beta dot
    constraints = constraints + set(-angleMax <= x(2:3,i) <= angleMax);
    constraints = constraints + set(-vAngleMax <= x(5:6,i) <= vAngleMax);
    
    %constraints on u
    constraints = constraints + set(0 <= u(:,i) <= 1);
    
    %Objective
    objective = objective + (x(:,i))'*Q*(x(:,i)) + (u(:,i))'*R*(u(:,i));

end

x(:,1) = x0;
u(:,1) = [0 0 0 0] - us;

options = sdpsettings('solver','qpip');
innerController = optimizer(constraints, objective, options, x(:,1), u(:,1));
simQuad( sys, innerController, x0, T);



pause

%% Reference tracking - no disturbance, no invariant sets
fprintf('PART II - reference tracking...\n')

pause

%% Nonlinear model simulation - no disturbance
fprintf('Running the FIRST NL model simulation...\n')
sim('simulation1.mdl') 

pause

%% Disturbance estimation
%estimator


%% Offset free MPC
fprintf('PART III - OFFSET FREE / Disturbance rejection...\n')

pause

%% Final simulation
fprintf('Running the FINAL NL model simulation...\n')
sim('simulation2.mdl') 
pause
%% BONUS - Slew rate constraints
% run after doing nonlinear simulations otherwise the NL simulations won't
% work (because of the additional controller argument)
fprintf('BONUS - SLEW RATE CONSTRAINTS...\n')






